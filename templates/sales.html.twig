{% extends 'base.html.twig' %}

{% block title %}{{ 'app.sales.title'|trans }} | {{ parent() }}{% endblock %}

{% block stylesheets %}{{ parent() }}
		<style>
		.has-ticket {
			position: relative;
		}
		.has-ticket::before {
			position: absolute;
			content: '{{ 'app.fields.item.ticket.label.short'|trans }}¬†';
			transform: rotate(-45deg);
			top: 0;
			left: 0;
		}
		</style>
{%- endblock %}

{% block container_type %}container-fluid"
				x-data="Sales()
				{%- if is_granted('ROLE_USER') %}"
				x-init="Object.assign($data, authenticatedSales);
					$data.debounceBroadcast = Alpine.debounce($data.broadcast.bind($data), 400);
					$data.printError = $data.printError.bind($data);"
				x-effect="order.quantity; debounceBroadcast('update', order)
				{%- endif -%}
{%- endblock -%}

{% block menu %}{% endblock %}

{% block _order_simple_lines_entry_row %}
{%- set item = form.vars.data.item %}
				<div class="item-root"
						data-id="{{ item.id }}"
						data-content-ids="{{ (item.isPack ? item.composedOf|map(i => i.id) : [item.id])|json_encode }}"
						:class="{'col': layout.layout == 'deck'}"
						x-show="order.lines[{{ item.id }}].show(category)"
						@click="itemClick"
					>
					<div style="
							{%- if item.colour %}background-color: {{ item.colour }} !important; {% endif -%}
							{%- if item.isPack %}{{ pack_gradient(item.composedOf) }}; {% elseif item.variants.count > 1 %}{{ variants_gradient(item.variants)}}; {% endif -%}
							color: var(--bs-{{ item.colour ? (is_dark(item.colour) ? 'light' : 'dark') : 'body-color' }});"
							title="{{ item.title }}"
							:class="{'card h-100': layout.layout == 'deck'}"
						>
						<div :class="{'row': layout.layout != 'deck', 'card-body': layout.layout == 'deck'}">
							<div class="h1 text-center user-select-none"
									:class="{
										'col-4': layout.layout != 'deck',
										'col-sm-3 col-md-2': layout.layout != 'deck' && layout.titleDisplay,
										'col-sm-6': layout.layout != 'deck' && !layout.titleDisplay,
										'card-title w-100': layout.layout == 'deck'
									}"
									x-show="layout.labelDisplay"
								>
								{{- item.label -}}
							</div>
							<label for="{{ form.quantity.vars.id }}"
									class="user-select-none"
									:class="{
										'd-none d-sm-block d-flex align-self-center': layout.layout != 'deck',
										'd col-sm-3 col-md-4': layout.layout != 'deck' && layout.labelDisplay,
										'col-sm-6 py-3': layout.layout != 'deck' && !layout.labelDisplay,
										'text-center mb-2 d-block': layout.layout == 'deck',
										'visually-hidden': !layout.titleDisplay
									}"
									{%~ if item.isPack or item.variants.count > 1 %}style="text-shadow: 0 0 3px var(--bs-{{ item.colour ? (is_dark(item.colour) ? 'dark' : 'light') : 'body-color' }})"{% endif %}
								>
								{{- item.title -}}
							</label>
							{% if item.attributes.empty or item.variants.empty -%}
							<div class="text-end user-select-none"
									:class="{
										'align-self-center col-3 col-sm-2': layout.layout != 'deck',
										'card-text col-4 float-start pe-1 py-1': layout.layout == 'deck'
									}"
									x-show="layout.numbersDisplay"
								>
								{{- item.price|number_format(2, ',') -}}
							</div>
							<div :class="{'col-2 px-0 align-items-center': layout.layout != 'deck', 'card-text col-8 ps-0 float-end ps-1': layout.layout == 'deck', 'd-flex': layout.layout != 'deck' && layout.numbersDisplay}" x-show="layout.numbersDisplay">
								{% if is_granted('IS_AUTHENTICATED_FULLY') and app.user.printer is none and item.ticket %}
								<div class="input-group input-group-sm">
								{%- endif %}
									{{ form_widget(form.quantity, {'attr': {
										'class': "form-control form-control-sm text-end",
										'x-model.number': 'order.lines[' ~ item.id ~ '].quantity'
									}}) }}
								{% if is_granted('IS_AUTHENTICATED_FULLY') and app.user.printer is none and item.ticket %}
									<span class="input-group-text border-4 py-0 p-1" style="background-color: inherit; color: var(--bs-{{ item.colour ? (is_dark(item.colour) ? 'light' : 'dark') : 'body-color' }}); border-color: var(--bs-{{ item.colour ? (is_dark(item.colour) ? 'light' : 'dark') : 'body-color' }});">{{ 'app.fields.item.ticket.label.short'|trans }}</span>
								</div>
								{% endif ~%}
							</div>
							<output name="_{{ form.quantity.vars.id }}" id="_{{ form.quantity.vars.id }}" class="text-end user-select-none item-total" :class="{'col-3 col-sm-2 align-self-center': layout.layout != 'deck', 'card-text w-100 align-self-center pe-2': layout.layout == 'deck'}" x-show="layout.numbersDisplay" x-text="order.lines[{{ item.id }}].amount.toFixed(2).replace('.', ',')"></output>
							{%~ endif %}
						</div>
					</div>
				</div>
{% endblock %}

{% form_theme form _self %}

{% block body -%}
			{{ form_start(form, {'attr': {'id': 'Main', 'class': 'row', '@submit': 'orderSubmit','x-ref': 'Form'}}) }}
				<div id="Receipt" class="d-none px-0" :class="{'d-md-block': layout.receiptDisplay > 0, ['col-md-' + Math.round(layout.receiptDisplay * 12)]: layout.receiptDisplay > 0}" x-ref="Receipt">
					<table class="table table-sm align-middle mt-3">
						{% for line in form.lines -%}
						{%- set item = line.vars.data.item -%}
						<tr class="item-root" style="min-height: 4em;" data-id="{{ item.id }}" x-show="order.lines[{{ item.id }}].quantity > 0 && !order.lines[{{ item.id }}].isPack">
							<td class="d-none text-center"
								:class="{'d-none': layout.receiptDisplay * window.screen.availWidth <= 287.99}">{{ item.label }}</td>
							<td>{{ item.title }}</td>
							<td class="text-end">{{ item.price|number_format(2, ',') }}</td>
							<td class="text-end
								{%- if is_granted('IS_AUTHENTICATED_FULLY') and app.user.printer is none and item.ticket and item.colour %} ps-3 has-ticket"
								style="background-color: {{ item.colour }} !important; color: var(--bs-{{ is_dark(item.colour) ? 'light' : 'dark' }});
								{% endif %}" x-text="order.lines[{{ item.id }}].quantity"></td>
							<td class="text-end" x-text="(order.lines[{{ item.id }}].amount).toFixed(2).replace('.', ',')"></td>
						</tr>
						{% endfor ~%}
					</table>
				</div>
				<div id="ItemList" :class="{['col-md-' + (12 - Math.round(layout.receiptDisplay * 12))]: layout.receiptDisplay > 0}" x-ref="ItemList">
					{{ form_row(form.categories, {
						'label_attr': {
							'class': 'btn btn-lg',
							':class': "{'btn-outline-light': this.getPreferredTheme() == 'dark', 'btn-outline-dark': this.getPreferredTheme() == 'light'}"
						},
						'row_attr': {
							'class': 'sticky-top pt-3 mb-3',
							'style': 'background-color: var(--bs-body-bg);',
						},
						'attr': {
							'class': 'categories',
							'data-layout': 'table'
						},
						'help': '<hr class="row mt-3 mb-0" />',
						'help_html': true,
					}) }}
					{{ form_widget(form.lines, {
						'attr': {':class': "{
							'row row-cols-2 g-2': layout.layout == 'deck',
							'row-cols-sm-3': layout.layout == 'deck' && (1 - layout.receiptDisplay) * window.screen.availWidth > 575.98,
							'row-cols-md-4': layout.layout == 'deck' && (1 - layout.receiptDisplay) * window.screen.availWidth > 767.98,
							'row-cols-lg-5': layout.layout == 'deck' && (1 - layout.receiptDisplay) * window.screen.availWidth > 991.98,
							'row-cols-xl-6': layout.layout == 'deck' && (1 - layout.receiptDisplay) * window.screen.availWidth > 1399.98
						}"|raw}
					}) ~}}
				</div>
				<div class="row sticky-bottom pb-3 mt-3" style="background-color: var(--bs-body-bg);">
					<hr />
					<div class="col-5">
						<div class="btn-group" role="group">
							<input type="radio" checked="checked" name="direction" id="Adder" class="btn-check" value="1" x-model.number="direction" /><label for="Adder" class="btn btn-outline-success">‚ûï</label>
							<input type="radio" name="direction" id="Remover" class="btn-check" value="-1" x-model.number="direction" /><label for="Remover" class="btn btn-outline-warning">‚ûñ</label>
							<div class="btn-group dropup" role="group">
								<button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">üé®</button>
								<ul class="dropdown-menu">
									<li class="d-none d-sm-block"><div class="dropdown-item px-0 btn-group">
										<input type="checkbox" checked="checked" id="LabelToggler" class="btn-check" :disabled="!layout.titleDisplay" @click="toggleLabel()" x-model.boolean="layout.labelDisplay" x-ref="LabelToggler" />
										<label for="LabelToggler" class="btn btn-outline-primary">üè∑Ô∏è</label>
										<input type="checkbox" checked="checked" id="TitleToggler" class="btn-check" :disabled="!layout.labelDisplay" @click="toggleTitle()" x-model.boolean="layout.titleDisplay" x-ref="TitleToggler" />
										<label for="TitleToggler" class="btn btn-outline-primary">„Ä∞Ô∏è</label>
										<input type="checkbox" checked="checked" id="NumbersToggler" class="btn-check" :disabled="layout.receiptDisplay == 0" @click="toggleNumbers()" x-model.boolean="layout.numbersDisplay" x-ref="NumbersToggler" />
										<label for="NumbersToggler" class="btn btn-outline-primary">üî¢</label>
									</div></li>
									<li><button type="button" class="dropdown-item" @click="toggleLayout(event)" x-ref="LayoutToggler" x-text="(layout.layout != 'deck') ? '‚ñÑ‚ñÄ' : '‚ò∞'"></button></li>
									<li><button type="button" id="ThemeToggler" class="dropdown-item" data-content-possible="{&quot;light&quot;:&quot;üåô&quot;,&quot;dark&quot;:&quot;‚òÄÔ∏è&quot;}"></button></li>
								</ul>
							</div>
							{% if is_granted('IS_AUTHENTICATED_FULLY') -%}
							<a href="{{ path('sales_summary') }}" target="_blank" class="btn btn-outline-secondary d-md-none">üßæ</a>
							{% endif -%}
							<div class="btn-group dropup d-none d-md-block" role="group">
								<button class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">üßæ</button>
								<ul class="dropdown-menu">
									<li><div class="dropdown-item" :class="{ 'active': layout.receiptDisplay }" @click="toggleReceiptDisplay(event)" x-ref="Splitter"><span role="button">üóÉÔ∏è</span>
										<input type="range" list="SplitterRatio" disabled="disabled" value="0" min="0.25" max="0.5" step="0.0833" :disabled="!layout.receiptDisplay" form="DontReset" class="ms-2" style="width: 7em;" @change="changeReceiptDisplay(event.target.value)" x-ref="SplitterRatioSelector" x-model="layout.receiptDisplay" /></div></li>
									{% if is_granted('IS_AUTHENTICATED_FULLY') -%}
									<li><a href="{{ path('sales_summary') }}" target="_blank" class="dropdown-item">üóÇÔ∏è</a></li>
									{% endif -%}
								</ul>
							</div>
							<datalist id="SplitterRatio">
								<option value="0.25" label="¬º"></option>
								<option value="0.3333" label="‚Öì"></option>
								<option value="0.4999" label="¬Ω"></option>
							</datalist>
							<button type="reset" class="btn btn-danger" title="{{ 'global.action.reset'|trans }}" aria-label="{{ 'global.action.reset'|trans }}">üßπ</button>
						</div>
					</div>
					<div class="col-3 text-end{% if is_granted('IS_AUTHENTICATED_FULLY') %}">
						{%- if form.paymentMethod.children|length == 1 -%}
							<button type="button" name="{{ form.paymentMethod.children[0].vars.full_name }}" value="{{ form.paymentMethod.children[0].vars.value }}" :disabled="order.quantity == 0" class="btn btn-primary float-start payment-method" title="{{ 'global.action.validate'|trans }}" @click="paymentMethodSelect" aria-label="
									{{- 'global.action.validate'|trans -}}
								" data-action="validate">‚úîÔ∏è</button>
							{%- do form.paymentMethod.children[0].setRendered(true) -%}
						{%- else -%}
							<div class="btn-group dropup" role="group">
								<button type="button" disabled="disabled" class="btn btn-outline-primary dropdown-toggle payment-method" :disabled="order.quantity == 0" data-bs-toggle="dropdown" aria-expanded="false" title="{{ 'global.action.validate'|trans }}" aria-label="{{ 'global.action.validate'|trans }}">‚úîÔ∏è</button>
								<ul class="dropdown-menu">
									{% for i,child in form.paymentMethod.children -%}
									<li>{{ form_widget(child, {
										'attr': {
											'class': 'btn-check payment-method',
										},
										'label_attr': {
											'class': 'dropdown-item display-6',
											'style': (child.vars.attr.style|length > 18 ? child.vars.attr.style ~ ' !important; ')
												~ 'color: var(--bs-'
												~ (child.vars.attr.style|length > 18 ? (is_dark(child.vars.attr.style[18:]) ? 'light' : 'dark') : 'body-color') ~ ');',
											'@click': 'paymentMethodSelect',
										}}) }}</li>
									{% endfor -%}
								</ul>
							</div>
						{%- endif %}
						{%- else %} pt-1">
							{%- do form.paymentMethod.setRendered(true) -%}
						{% endif %}¬†{{ 'app.sales.total'|trans }}</div>
					<output name="totalItems" class="col-2 pt-1 text-end" x-text="`${order.quantity}
						{%- if is_granted('IS_AUTHENTICATED_FULLY') and app.user.printer is none %} (${order.tickets} {{ 'app.fields.item.ticket.label.short'|trans }}){% endif %}`"></output>
					<output name="totalPrice" class="col-2 pt-1 text-end" x-text="order.amount.toFixed(2).replace('.', ',')"></output>
				</div>
			{{ form_end(form) }}
{% endblock %}

{% block javascripts %}
	<script src="{{ asset('js/theme_handler.js') }}"></script>
	<script src="{{ asset('js/sales.alpine.js') }}" defer="defer" data-items="{{ form.lines.vars.data|map(l => l.item)|json_encode|e('html') }}"></script>
	<script src="{{ assets_host }}/alpinejs/3.14.9/cdn.min.js" defer="defer" integrity="sha512-KSdieUYxSxr/laB3Bh5TP8GAng49b2qRfdcnFvh8OuPpPgksA189OQ9v1A3gIz5P9s3A4aXMe5uiHLMfla60Uw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	{% if is_granted('IS_AUTHENTICATED_FULLY') -%}
	<script src="{{ assets_host }}/murmurhash3js/3.0.1/murmurhash3js.min.js" integrity="sha512-HCmS85fXMOkBrVzhJwv5ULIWC6ajmqSJ/JRNJEnD8blyvlSLjcAdlERQR5fazd3Iey5QfftJaFfUW5JiXTDhbw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	{% if app.user.printer is not none -%}
	<script src="{{ path('printer_config') }}"></script>
	<script src="{{ asset('js/print_sdks/' ~ app.user.printer.api.value ~ '_sdk.js' )}}"></script>
	<script src="{{ asset('js/print_sdks/' ~ app.user.printer.api.value ~ '.js') }}" defer="defer"></script>
	<script src="{{ asset('js/print_template/ticket.' ~ app.user.printer.api.value ~ '.js') }}" defer="defer"></script>
	<script src="{{ asset('js/print_template/ticket_logo.' ~ app.user.printer.api.value ~ '.js') }}" defer="defer"></script>
	{% endif -%}
	<script>//<![CDATA[
	const modal = document.getElementById('Modal');
	const bootstrapModal = new bootstrap.Modal(modal);
	const domParser = new DOMParser();
	modal.addEventListener('hide.bs.modal', function() {
		const content = domParser.parseFromString(modal.querySelector('[data-empty-content]').dataset.emptyContent, 'text/html').querySelector('body>*');
		modal.querySelector('.modal-content').replaceChildren(content);
	});
	document.querySelectorAll('.payment-method[value]:not([value=""])').forEach(async paymentMethod => {
		const now = Date.now();
		if (!localStorage.getItem('paymentMethod.restricted.' + paymentMethod.value + '.expires')
			|| new Date(localStorage.getItem('paymentMethod.restricted.' + paymentMethod.value + '.expires')).getTime() < now
		) {
			const restrictedResponse = await fetch('{{ path('pre_print', {'type': 'restricted'})}}?'
				+ new URLSearchParams({'paymentMethodId': paymentMethod.value}).toString());
			if (restrictedResponse.ok) {
				restrictedResponse.text().then( text => {
					if (text) {
						localStorage.setItem('paymentMethod.restricted.' + paymentMethod.value + '.content', text);
					}
					localStorage.setItem('paymentMethod.restricted.' + paymentMethod.value + '.expires', (new Date(now + 4 * 60 * 60 * 1000)).toISOString());
				});
			}
		}
		if (!localStorage.getItem('paymentMethod.public.' + paymentMethod.value + '.expires')
			|| new Date(localStorage.getItem('paymentMethod.public.' + paymentMethod.value + '.expires')).getTime() < now
		) {
			const publicResponse = await fetch('{{ path('pre_print', {'type': 'public'})}}?'
				+ new URLSearchParams({'paymentMethodId': paymentMethod.value}).toString());
			if (publicResponse.ok) {
				publicResponse.text().then( text => {
					if (text) {
						localStorage.setItem('paymentMethod.public.' + paymentMethod.value + '.content', text);
					}
					localStorage.setItem('paymentMethod.public.' + paymentMethod.value + '.expires', (new Date(now + 4 * 60 * 60 * 1000)).toISOString());
				});
			}
		}
	});
	const authenticatedSales = {
		channel: new BroadcastChannel('{{ app.user.token }}'),
		broadcast(type, order) {
			this.channel.postMessage({type, order: JSON.stringify(order)});
		},
		paymentMethodSelect(event) {
			bootstrapModal.show();
			// Avoid invalid error when last item was a variant
			this.category = '';
			const paymentMethodId = document.getElementById(event.target.getAttribute('for')).value;
			let content = localStorage.getItem('paymentMethod.restricted.' + paymentMethodId + '.content');
			if (this.order.quantity != 0 && !this.order.date) {
				const now = new Date();
				this.order.date = now.toLocaleString('{{ app.request.locale }}').substring(0, 16);
				document.querySelector('[name*="printDate"]').value = now.toISOString();
				this.order.id = murmurHash3.x86.hash32(now.toISOString() + this.channel.name).toString(36).padStart(7, '0');
				document.querySelector('[name*="externalId"]').value = this.order.id;
			}
			if (content) {
				content = content
					.replace(/__amount__/, this.order.amount)
					.replace(/__id__/, this.order.id)
					.replace(/__date__/, this.order.date);
				modal.querySelector('.modal-content').replaceChildren(...domParser.parseFromString(content, 'text/html').querySelectorAll('body>*'));
			} else {
				{%- if app.user.printer is not none ~%}
				try {
					if (!printerConfig.key1 || !printerConfig.key2 || !ticket_logo_epson_xml) {
						print(ticket_epson_xml, this.order, this.printSuccess, this.printError);
					} else {
						print(ticket_logo_epson_xml, this.order, this.printSuccess, this.printError);
					}
				} catch (e) {
					this.debounceBroadcast('status', 'error');
					console.error(e);
				}
				{%- else ~%}
				event.target.submit();
				{%- endif ~%}
			}
		},
		printSuccess() {
			bootstrapModal.hide();
			document.getElementById('Main').submit();
		},
		printError(message) {
			this.debounceBroadcast('status', 'error');
			console.error(message);
		},
		orderSubmit(event) {
			if (event.submitter.dataset.action === 'print') {
				event.stopPropagation();
				event.preventDefault();
				try {
					if (!printerConfig.key1 || !printerConfig.key2 || !ticket_logo_epson_xml) {
						print(ticket_epson_xml, this.order, this.printSuccess, this.printError);
					} else {
						print(ticket_logo_epson_xml, this.order, this.printSuccess, this.printError);
					}
					event.submitter.classList.add('waiting', 'disabled');
				} catch (e) {
					event.submitter.classList.remove('waiting', 'disabled');
					this.debounceBroadcast('status', 'error');
					console.error(e);
				}
				return;
			}
		}
	}
	/*]]>*/</script>
	{% endif -%}
{% endblock %}